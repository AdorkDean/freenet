<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util-4.2.xsd
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-4.2.xsd
        http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd">

	<description>freenet spring-mvc config</description>

	<!-- 扫描指定的包中的类上的注解 -->
	<!-- freenet service ctrl -->
	<context:component-scan base-package="com.freenet.ctrl" />
	<!-- freenet domain service Impl dao -->
	<context:component-scan base-package="com.freenet.domain" />
	<context:component-scan base-package="com.freenet.service" />
	<context:component-scan base-package="com.freenet.dao" />
	<context:component-scan base-package="com.freenet.service.Impl" />




	<!-- 解决Spring MVC 返回JSON乱码问题 -->
	<mvc:annotation-driven>
		<!-- <mvc:message-converters register-defaults="true"> <bean class="com.j.tools.spring.UTF8StringHttpMessageConverter" 
			/> </mvc:message-converters> -->
	</mvc:annotation-driven>

	<!-- 视图解释类，jsp页面解析器，当Controller返回XXX字符串时，先通过拦截器，然后该类就会在/WEB-INF/views/目录下，查找XXX.jsp文件 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
		<!--可为空,方便实现自已的依据扩展名来选择视图解释类的逻辑 -->
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
	</bean>

	<!-- 对静态资源文件的访问 方案二 （二选一） 此配置可访问WEB-INF/下的资源文件 -->
	<mvc:resources location="/WEB-INF/resources/" mapping="/resources/**" />
	<mvc:resources location="/" mapping="/**/**.htm" />
	<mvc:resources location="/" mapping="/**/**.js" />
	<!-- 若有需要可再添加 -->

	<!-- 拦截器 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/manager/**" />
			<bean class="com.freenet.interceptor.ManagerInterceptor" />
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/user/**" />
			<bean class="com.freenet.interceptor.UserInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>

	<!-- 引入spring.xml配置文件 -->
	<import resource="spring.xml" />
</beans>
